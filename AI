import sys
import sqlite3
import PyQt6
from PyQt6.QtCore import QSize, Qt
from PyQt6.QtGui import QAction
from PyQt6.QtWidgets import QApplication, QWidget, QMainWindow, QPushButton, QLabel, QLineEdit, QVBoxLayout, QTextEdit, QMenu
import sys
selffile = 'AI'
def createtable(base, name):
     connection = sqlite3.connect(base + ".db")
     crsr = connection.cursor()
     try:
        sql_command = """CREATE TABLE {name} (
);"""
     except:
        print('failure')
     crsr.execute(sql_command)
     connection.close()


def createdb(name):
     connection = sqlite3.connect()
     crsr = connection.cursor()
     try:
        sql_command = """CREATE DATABASE {name};"""
     except:
        print('failure')
     crsr.execute(sql_command)
     connection.close()


def modify(base, action, value):
    print()


def data(base, extract):
    connection = sqlite3.connect(base + ".db")
    crsr = connection.cursor()
    try:
        sql_command = """SELECT {extract} FROM {base};"""
    except:
        print('failure')
    crsr.execute(sql_command)
    connection.close()


def failure(type):
    if type == 'SQLFail':
        print('SQL Failed. Collecting data...')
    if type == 'WindowFail':
        print('Window Failed, Collection data...')

#set main window
class MainWindow(QMainWindow):
    def __init__(self):
        super().__init__()
        self.setWindowTitle("AI")
        
      
        

app = QApplication(sys.argv)
window = MainWindow()
window.show()
app.exec()